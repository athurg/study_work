/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0ms\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000000.0;
	SIMULATION_TIME = 2000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("adc_a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("adc_a[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "adc_a";
}

SIGNAL("adc_a[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "adc_a";
}

SIGNAL("adc_a[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "adc_a";
}

SIGNAL("adc_a[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "adc_a";
}

SIGNAL("adc_a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "adc_a";
}

SIGNAL("adc_a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "adc_a";
}

SIGNAL("adc_a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "adc_a";
}

SIGNAL("adc_a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "adc_a";
}

SIGNAL("dac_a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dac_a[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_a";
}

SIGNAL("dac_a[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_a";
}

SIGNAL("dac_a[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_a";
}

SIGNAL("dac_a[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_a";
}

SIGNAL("dac_a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_a";
}

SIGNAL("dac_a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_a";
}

SIGNAL("dac_a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_a";
}

SIGNAL("dac_a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_a";
}

SIGNAL("dac_x")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dac_x[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_x";
}

SIGNAL("dac_x[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_x";
}

SIGNAL("dac_x[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_x";
}

SIGNAL("dac_x[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_x";
}

SIGNAL("dac_x[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_x";
}

SIGNAL("dac_x[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_x";
}

SIGNAL("dac_x[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_x";
}

SIGNAL("dac_x[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dac_x";
}

SIGNAL("divisor")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("divisor[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "divisor";
}

SIGNAL("divisor[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "divisor";
}

SIGNAL("expand")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("offset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("offset[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "offset";
}

SIGNAL("offset[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "offset";
}

SIGNAL("offset[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "offset";
}

SIGNAL("offset[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "offset";
}

SIGNAL("offset[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "offset";
}

SIGNAL("offset[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "offset";
}

SIGNAL("offset[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "offset";
}

SIGNAL("offset[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "offset";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sample_init")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sample_ok")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("successive")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sys_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("adc_a[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 76000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 128000.0;
			LEVEL 1 FOR 128000.0;
		}
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("adc_a[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12000.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 64000.0;
			LEVEL 0 FOR 64000.0;
		}
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("adc_a[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 12000.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 0 FOR 32000.0;
			LEVEL 1 FOR 32000.0;
		}
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("adc_a[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 12000.0;
		NODE
		{
			REPEAT = 62;
			LEVEL 0 FOR 16000.0;
			LEVEL 1 FOR 16000.0;
		}
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("adc_a[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 8000.0;
			LEVEL 0 FOR 8000.0;
		}
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("adc_a[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 250;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 4000.0;
		}
	}
}

TRANSITION_LIST("adc_a[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
		}
	}
}

TRANSITION_LIST("adc_a[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("dac_a[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405060.422;
		LEVEL 1 FOR 3.122;
		LEVEL 0 FOR 898.364;
		NODE
		{
			REPEAT = 33;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 129000.0;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 639000.0;
		NODE
		{
			REPEAT = 63;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 129000.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 343038.092;
	}
}

TRANSITION_LIST("dac_a[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 409961.158;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 31;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 65000.0;
		}
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 65000.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 501000.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 31;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 65000.0;
		}
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 377038.842;
	}
}

TRANSITION_LIST("dac_a[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405058.949;
		LEVEL 1 FOR 3.718;
		LEVEL 0 FOR 898.364;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 33000.0;
			NODE
			{
				REPEAT = 15;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 479000.0;
		NODE
		{
			REPEAT = 6;
			NODE
			{
				REPEAT = 15;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 33000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 343038.969;
	}
}

TRANSITION_LIST("dac_a[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405059.622;
		LEVEL 1 FOR 3.215;
		LEVEL 0 FOR 898.364;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 17000.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 69898.421;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 398100.0;
		LEVEL 1 FOR 3.215;
		LEVEL 0 FOR 898.364;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 17000.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 345038.799;
	}
}

TRANSITION_LIST("dac_a[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405059.281;
		LEVEL 1 FOR 3.216;
		LEVEL 0 FOR 898.364;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 9000.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 9000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 461000.0;
		NODE
		{
			REPEAT = 24;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 9000.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 345039.139;
	}
}

TRANSITION_LIST("dac_a[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405960.876;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 5000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 460098.42;
		LEVEL 1 FOR 3.216;
		LEVEL 0 FOR 898.364;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 345039.124;
	}
}

TRANSITION_LIST("dac_a[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405059.276;
		LEVEL 1 FOR 3.718;
		LEVEL 0 FOR 2898.364;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 3000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 61897.918;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 399002.082;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 3000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 345038.642;
	}
}

TRANSITION_LIST("dac_a[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405059.685;
		LEVEL 1 FOR 3.215;
		LEVEL 0 FOR 1594937.1;
	}
}

TRANSITION_LIST("dac_x[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 658963.84;
		LEVEL 1 FOR 144000.0;
		LEVEL 0 FOR 710000.0;
		LEVEL 1 FOR 144000.0;
		LEVEL 0 FOR 343036.16;
	}
}

TRANSITION_LIST("dac_x[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 530963.881;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 582000.0;
		LEVEL 1 FOR 128000.0;
		LEVEL 0 FOR 128000.0;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 343036.119;
	}
}

TRANSITION_LIST("dac_x[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 466964.228;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 64000.0;
			LEVEL 0 FOR 64000.0;
		}
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 534000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 64000.0;
			LEVEL 0 FOR 64000.0;
		}
		LEVEL 1 FOR 64000.0;
		LEVEL 0 FOR 359035.772;
	}
}

TRANSITION_LIST("dac_x[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 434964.16;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 502000.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 32000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 32000.0;
		LEVEL 0 FOR 359035.84;
	}
}

TRANSITION_LIST("dac_x[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 418964.553;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 16000.0;
			LEVEL 0 FOR 16000.0;
		}
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 486000.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 16000.0;
			LEVEL 0 FOR 16000.0;
		}
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 359035.447;
	}
}

TRANSITION_LIST("dac_x[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 410964.249;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 8000.0;
			LEVEL 0 FOR 8000.0;
		}
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 462000.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 8000.0;
			LEVEL 0 FOR 8000.0;
		}
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 343035.751;
	}
}

TRANSITION_LIST("dac_x[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 406964.612;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 4000.0;
		}
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 458101.636;
		LEVEL 1 FOR 3898.364;
		NODE
		{
			REPEAT = 49;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 4000.0;
		}
		LEVEL 0 FOR 343035.388;
	}
}

TRANSITION_LIST("dac_x[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405066.585;
		LEVEL 1 FOR 1898.364;
		NODE
		{
			REPEAT = 99;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
		}
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 398101.636;
		LEVEL 0 FOR 1898.364;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
		}
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 343035.051;
	}
}

TRANSITION_LIST("divisor[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("divisor[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("expand")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("offset[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("offset[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("offset[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("offset[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("offset[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("offset[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("offset[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("offset[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("sample_init")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7680.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 852480.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 1134720.0;
	}
}

TRANSITION_LIST("sample_ok")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 404964.025;
		LEVEL 1 FOR 458099.826;
		LEVEL 0 FOR 397900.174;
		LEVEL 1 FOR 739035.975;
	}
}

TRANSITION_LIST("successive")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("sys_clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 20000;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "sys_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "adc_a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "adc_a[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "adc_a[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "adc_a[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "adc_a[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "adc_a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "adc_a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "adc_a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "adc_a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "divisor";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "divisor[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "divisor[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "expand";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "offset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "offset[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "offset[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "offset[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "offset[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "offset[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "offset[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "offset[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "offset[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sample_init";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "successive";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sample_ok";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dac_x";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "dac_x[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "dac_x[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "dac_x[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "dac_x[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "dac_x[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "dac_x[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "dac_x[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "dac_x[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "dac_a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "dac_a[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "dac_a[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "dac_a[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "dac_a[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "dac_a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "dac_a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "dac_a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "dac_a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

TIME_BAR
{
	TIME = 100000;
	MASTER = TRUE;
}
;
