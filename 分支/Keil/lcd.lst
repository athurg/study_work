C51 COMPILER V7.06   LCD                                                                   10/14/2008 14:15:57 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE lcd.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /*
   2          
   3          LCD1602三个存储器说明：
   4          
   5          DDRAM：液晶显示数据存储器；保存着LCD上显示的字符点阵数据；
   6          CGRAM：Character Generator ROM，字符产生存储器；可以保存8个5*8字符点阵码，或者4个5*10字符点阵码
   7          CGROM：Character Generator ROM，字符产生存储器；保存着1602预置的174个字符的点阵码
   8          
   9          AC：Address Couter，地址计数器；当前光标所在的DDRAM字符的地址；
  10          */
  11          
  12          #include "lcd.h"
  13          #include "common.h"
  14          
  15          /********************* LCD指令 *********************/
  16          #define LCD_CMD_CLS 0x01 //清屏指令（清DDRAM(DDRAM)和AC）
  17          #define LCD_CMD_HOME 0x02 //归位（AC=0，光标、画面回HOME位），也可用0x03
  18          
  19          
  20          //LCD忙标志位
  21          #ifndef LCD_BUSY
                  #define LCD_BUSY P0_7
              #endif
  24          
  25          /*--------------------------------函数定义--------------------------------*/
  26          void lcd_wait(void)
  27          {
  28   1      /************************
  29   1      *    等待LCD不忙函数
  30   1      *
  31   1      * 参数：空
  32   1      * 返回：空（不忙时才返回）
  33   1      *
  34   1      *************************/
  35   1      
  36   1              while(1){
  37   2                      LCD_EN=0;
  38   2                      LCD_RS=0;
  39   2                      LCD_RW=1;
  40   2                      LCD_DATA=0xFF;
  41   2                      LCD_EN=1;
  42   2                      if(!LCD_BUSY)           break;          //忙完了，不玩了：）
  43   2              }
  44   1              LCD_EN=0;
  45   1              return;
  46   1      }
  47          
  48          /************************************************************
  49                      LCD写入函数
  50          
  51              参数：
  52                  type：写入类型，0为指令，1为字符
  53                  datas：8 bits要写入的数据
  54          
  55              返回：空
C51 COMPILER V7.06   LCD                                                                   10/14/2008 14:15:57 PAGE 2   

  56              调用：无
  57              描述：
  58                  RS=type，RW=0(写操作) ==>> EN下降沿时执行
  59          *************************************************************/
  60          void lcd_write(char type, char datas)
  61          {
  62   1          lcd_wait(); //等候LCD闲，置于最前面，以防止lcd_wait()对RS和RW造成影响
  63   1          
  64   1          LCD_RS=type;
  65   1          LCD_RW=0;
  66   1      
  67   1          LCD_DATA=datas;
  68   1          
  69   1          //先1后0，产生下降沿以写入
  70   1          LCD_EN=1;
  71   1          LCD_EN=0;
  72   1              ;;;
  73   1      }
  74          
  75          /*************************************
  76                      LCD移动函数
  77              参数：
  78                  object：c为光标，f为屏幕
  79                  direct：l左移，r右移；
  80              返回：空
  81              调用：lcd_write(0,)
  82          
  83              说明：
  84                  LCD移动指令组成为：0x10+对象+方向；
  85                  对象取值：0x08画面、0x00光标；方向取值：0x04右、0x00左
  86          **************************************/
  87          void lcd_shift(char object, char num)
  88          {
  89   1          char datas=0x10;
  90   1          if(object == 'f')   //对象=画面
  91   1              datas+=0x08;
  92   1          if(num > 0) //正号右移
  93   1              datas+=0x04;
  94   1          else
  95   1              num=-num;       //负号取相反数，以统一循环变量
  96   1          
  97   1          while(num){
  98   2                      lcd_write(0,datas);     //一次移动
  99   2                      num--;
 100   2          }
 101   1      }
 102          
 103          /*************************************************
 104                      LCD光标定位到(x,y)处
 105          
 106              参数：x、y坐标，从0开始；
 107              返回：空
 108              调用：lcd_write(0,)
 109              说明：
 110                  通过改变DDRAM存储器的AC值来改变下一数据写入的位置
 111                  其指令为0x80+地址偏移量；
 112                  单行显示时，地址偏移取值为0x00~0x4f；
 113                  双行显示时首行为0x00~0x2f，次行为0x40~0x67
 114          **************************************************/
 115          void lcd_position(char x,char y)
 116          {
 117   1              //数据有效性检查
C51 COMPILER V7.06   LCD                                                                   10/14/2008 14:15:57 PAGE 3   

 118   1              //x=(x>16 || x<=0)?15:x--;
 119   1              //y=(y>2 || y<=0)?1:y--;
 120   1      
 121   1              if(y)   x+=0x40;        //0x40：第二行起始位置偏移量
 122   1              lcd_write(0,0x80+x);
 123   1      }
 124          
 125          
 126          /*********************************
 127                      LCD清屏
 128          
 129              参数：无
 130              返回：空
 131              调用：lcd_write(0,)
 132          **********************************/
 133          void lcd_cls(void)
 134          {
 135   1              lcd_write(0,LCD_CMD_CLS);
 136   1      }
 137          
 138          
 139          /**********************************
 140                      打印字符串
 141          
 142              调用：lcd_write(1,)
 143          ***********************************/
 144          void lcd_prints(char *string)
 145          {
 146   1          char i=0;
 147   1          while(string[i]!=0x00){
 148   2                      lcd_write(1,string[i]);
 149   2                      i++;
 150   2          }
 151   1      }
 152          
 153          
 154          /*****************************
 155                      定起点打印字符串
 156          
 157              调用：lcd_write(1,)、lcd_position()
 158          ******************************/
 159          void lcd_printsxy(char *string, char x, char y)
 160          {
 161   1          char i=0;
 162   1          lcd_position(x,y);  //先定位
 163   1          while(string[i]!=0x00){
 164   2                      lcd_write(1,string[i]);
 165   2                      i++;
 166   2          }
 167   1      }
 168          
 169          /*****************************
 170                      打印字符
 171          
 172              调用：lcd_write(1,)
 173          ******************************/
 174          void lcd_printc(char charactor)
 175          {
 176   1        lcd_write(1,charactor);
 177   1      }
 178          
 179          /*****************************
C51 COMPILER V7.06   LCD                                                                   10/14/2008 14:15:57 PAGE 4   

 180                      定点打印字符
 181          
 182              调用：lcd_write(1,)、lcd_position()
 183          ******************************/
 184          void lcd_printcxy(char charactor, char x, char y)
 185          {
 186   1          lcd_position(x,y);
 187   1          lcd_write(1,charactor);
 188   1      }
 189          
 190          /*****************************
 191                      定终点打印数值
 192          
 193              调用：lcd_write(1,)、lcd_position()
 194          ******************************/
 195          void lcd_printnxy(long int number, char x, char y)
 196          {
 197   1          char x_tmp=x;
 198   1          while(1){
 199   2            lcd_position(x_tmp,y);    //先输出，为0也输出0
 200   2            lcd_write(1,number%10+48);
 201   2            x_tmp--;  //退一位
 202   2            number/=10;
 203   2            if(0==number)     break;  //为0则停
 204   2          }
 205   1          lcd_position(++x,y);        //光标复位
 206   1      }
 207          
 208          /**************************************
 209                      LCD初始化
 210          
 211              调用：lcd_cls()、lcd_write()、lcd_position()
 212          ***************************************/
 213          void lcd_init(void)
 214          {
 215   1          //工作方式设置
 216   1              //取值为：0x20+数据接口＋行数＋字符分辨率
 217   1              //分辨率：4为5*10点阵、0为5*7点阵；行数：8为两行、0为一行；接口：0x10为8位数据接口，0x00为4为数据接口
 218   1          lcd_write(0,0x3c);          //两行5*10点阵，8位数据接口
 219   1      
 220   1          //输入方式(数据读写后AC和屏幕的变化)
 221   1              //取值为：0x04+AC＋画面
 222   1              //画面：1移动、0不动; AC：2自增、0自减
 223   1          lcd_write(0,0x06); //读写后画面固定、AC自增
 224   1      
 225   1          //显示开关(LCD、光标和闪烁)
 226   1              //取值为：0x08+闪烁＋光标＋显示
 227   1              //闪烁：1开、0关；光标：2开、0关；显示：4开、0关；
 228   1          lcd_write(0,0x0f);  //屏幕、光标和闪烁全开
 229   1      
 230   1          lcd_cls();
 231   1          lcd_write(0,LCD_CMD_HOME);  //LCD归位（清DDRAM、DDROM、AC，清除所有移动）
 232   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    321    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
C51 COMPILER V7.06   LCD                                                                   10/14/2008 14:15:57 PAGE 5   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
